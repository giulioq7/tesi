linuxCC=gcc
#SYS: this is for linux system
#SYS=linux

#linuxFL = -O2 -o grail.out
linuxFL = -Wno-deprecated  -O2 -o grail.out -lm -lstdc++


all:
	@$(MAKE) clean "MAKE=$(MAKE)"
#	@$(MAKE) compile TYPE=char "MAKE=$(MAKE)"
#	@$(MAKE) compile TYPE=re "MAKE=$(MAKE)"
#	@$(MAKE) compile TYPE=mlychar "MAKE=$(MAKE)"
#	@$(MAKE) compile TYPE=mlyint "MAKE=$(MAKE)"
#	@$(MAKE) install TYPE=char "MAKE=$(MAKE)"
#	@$(MAKE) install TYPE=re
#	@$(MAKE) install TYPE=mlychar
#	@$(MAKE) install TYPE=mlyint
	@$(MAKE) compile TYPE=int "MAKE=$(MAKE)"
	@$(MAKE) install TYPE=int "MAKE=$(MAKE)"

	@echo "Everything made"



compile:
	@cd $(TYPE); $(MAKE) CC='$(linuxCC)' CCFLAGS='$(linuxFL)' BIN=../binaries/linux/
	@./pmd


install:
#	@cd char; $(MAKE) install CP="ln -s" BIN=../binaries/linux/ I_BIN=../bin/
	@cd int; $(MAKE) install CP="ln -s" BIN=../binaries/linux/ I_BIN=../bin_int/
#	@cp char/GrailVersion.txt ${BIN}

checkout:
	@cd tests; $(MAKE) checkout 
	@echo "Testing complete."

clean:
#	@cd char; $(MAKE) clean_UNIX 
	@cd int; $(MAKE) clean_UNIX

#	#@cd re; $(MAKE) clean_UNIX
#	#@cd mlychar; $(MAKE) clean_UNIX
#	#@cd mlyint; $(MAKE) clean_UNIX
	@cd tests; $(MAKE) clean
	@rm -rf bin/* mon.out core tests/errors/* profiles/core
	@echo "Everything clean."

profile:
	@cd profiles; $(MAKE)
	@echo "Profiling complete."
