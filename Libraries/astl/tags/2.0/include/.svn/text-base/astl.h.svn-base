/*
 * ASTL - the Automaton Standard Template Library.
 * C++ generic components for Finite State Automata handling.
 * Copyright (C) 2000-2003 Vincent Le Maout (vincent.lemaout@chello.fr).
 * 
 * This library is free software; you can redistribute it and/or
 * modify it under the terms of the GNU Lesser General Public
 * License as published by the Free Software Foundation; either
 * version 2.1 of the License, or (at your option) any later version.
 * 
 * This library is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 * Lesser General Public License for more details.
 * 
 * You should have received a copy of the GNU Lesser General Public
 * License along with this library; if not, write to the Free Software
 * Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
 *
 */

#ifndef ASTL_ASTL_H
#define ASTL_ASTL_H

#ifdef _MSC_VER
#pragma warning( disable : 4786 ) // identifier truncated to 255 characters...
#pragma warning( disable : 4503 ) // identifier truncated to 255 characters...
// don't understand this warning, let's kill it:
#pragma warning( disable : 4800 ) // forcing value to bool true or false (performance warning)
#pragma warning( disable : 4530 ) // C++ exception handler used but unwind semantics disabled...
#endif


#include <concept.h>
#include <alphabet.h>  
#include <tools.h>
#include <tag.h>
#include <cursor.h>
#include <dfa.h>
#include <nfa_mmap.h>
#include <ccopy.h>
#include <language.h>
#include <match.h>
#include <hash.h>

#endif // ASTL_ASTL_H



